syntax = "proto3";

package florin.v1;

import "florin/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/monerium/module-noble/x/florin/types";

service Query {
  rpc AllowedDenoms(QueryAllowedDenoms) returns (QueryAllowedDenomsResponse) {
    option (google.api.http).get = "/florin/v1/allowed_denoms";
  }

  rpc Owners(QueryOwners) returns (QueryOwnersResponse) {
    option (google.api.http).get = "/florin/v1/owners";
  }
  rpc Owner(QueryOwner) returns (QueryOwnerResponse) {
    option (google.api.http).get = "/florin/v1/owner/{denom}";
  }

  rpc Systems(QuerySystems) returns (QuerySystemsResponse) {
    option (google.api.http).get = "/florin/v1/systems";
  }
  rpc SystemsByDenom(QuerySystemsByDenom) returns (QuerySystemsByDenomResponse) {
    option (google.api.http).get = "/florin/v1/systems/{denom}";
  }

  rpc Admins(QueryAdmins) returns (QueryAdminsResponse) {
    option (google.api.http).get = "/florin/v1/admins";
  }
  rpc AdminsByDenom(QueryAdminsByDenom) returns (QueryAdminsByDenomResponse) {
    option (google.api.http).get = "/florin/v1/admins/{denom}";
  }

  rpc MaxMintAllowances(QueryMaxMintAllowances) returns (QueryMaxMintAllowancesResponse) {
    option (google.api.http).get = "/florin/v1/max_mint_allowances";
  }
  rpc MaxMintAllowance(QueryMaxMintAllowance) returns (QueryMaxMintAllowanceResponse) {
    option (google.api.http).get = "/florin/v1/max_mint_allowance/{denom}";
  }

  rpc MintAllowances(QueryMintAllowances) returns (QueryMintAllowancesResponse) {
    option (google.api.http).get = "/florin/v1/mint_allowances/{denom}";
  }
  rpc MintAllowance(QueryMintAllowance) returns (QueryMintAllowanceResponse) {
    option (google.api.http).get = "/florin/v1/mint_allowance/{denom}/{account}";
  }
}

//

message QueryAllowedDenoms {}

message QueryAllowedDenomsResponse {
  repeated string allowed_denoms = 1;
}

message QueryOwners {}

message QueryOwnersResponse {
  map<string, string> owners = 1;
  map<string, string> pending_owners = 2;
}

message QueryOwner {
  string denom = 1;
}

message QueryOwnerResponse {
  string owner = 1;
  string pending_owner = 2;
}

message QuerySystems {}

message QuerySystemsResponse {
  repeated Account systems = 1 [(gogoproto.nullable) = false];
}

message QuerySystemsByDenom {
  string denom = 1;
}

message QuerySystemsByDenomResponse {
  repeated string systems = 1;
}

message QueryAdmins {}

message QueryAdminsResponse {
  repeated Account admins = 1 [(gogoproto.nullable) = false];
}

message QueryAdminsByDenom {
  string denom = 1;
}

message QueryAdminsByDenomResponse {
  repeated string admins = 1;
}

message QueryMaxMintAllowances {}

message QueryMaxMintAllowancesResponse {
  map<string, string> max_mint_allowances = 1;
}

message QueryMaxMintAllowance {
  string denom = 1;
}

message QueryMaxMintAllowanceResponse {
  string max_mint_allowance = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryMintAllowances {
  string denom = 1;
}

message QueryMintAllowancesResponse {
  map<string, string> allowances = 1;
}

message QueryMintAllowance {
  string denom = 1;
  string account = 2;
}

message QueryMintAllowanceResponse {
  string allowance = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
